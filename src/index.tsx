import axios from 'axios'
import React, { useEffect, useState } from 'react'
import ReactDOM from 'react-dom/client';

// Types
type TodoType = {
    id: string;
    title: string;
    order: number;
    createdAt: string;
    updatedAt: string;
    completed: boolean;
}


// Api
const instance = axios.create({baseURL: 'https://exams-frontend.kimitsu.it-incubator.ru/api/'})

const todosAPI = {
    getTodo(todoId: string) {
        return instance.get<TodoType>(`todos/${todoId}`)
    }
}


// App
export const App = () => {

    const [todo, setTodo] = useState<TodoType | null>(null)
    const [error, setError] = useState<string>('')

    useEffect(() => {
        const todoId = "637cb9342f24ad82bcb07d8d"
        todosAPI.getTodo(todoId)
            .then((res: any) => setTodo(res.data))
            .catch(e => {
                setError('–û—à–∏–±–∫–∞ üò∞. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π network üòâ')
            })
    }, [])


    return (
        <>
            <h2>‚úÖ –¢—É–¥—É–ª–∏—Å—Ç</h2>
            {
                !!todo
                    ? <div>
                        <div style={todo?.completed ? {color: 'grey'} : {}} key={todo?.id}>
                            <input type="checkbox" checked={todo?.completed}/>
                            <b>–û–ø–∏—Å–∞–Ω–∏–µ</b>: {todo?.title}
                        </div>
                        <h2>–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å. –¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è üöÄ</h2>
                    </div>
                    : <h2 style={{ color: 'red' }}>{error}</h2>
            }
        </>
    )
}


const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
root.render(<App/>)

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// –°—Ç—É–¥–µ–Ω—Ç –ø–æ –Ω–µ–æ–ø—ã—Ç–Ω–æ—Å—Ç–∏ –¥–æ–ø—É—Å—Ç–∏–ª –æ–¥–Ω—É –º–∞–ª–µ–Ω—å–∫—É—é –æ—à–∏–±–∫—É, –Ω–æ –∏–∑-–∑–∞ –Ω–µ–µ –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω —Ç—É–¥—É–ª–∏—Å—Ç.
// –ù–∞–π–¥–∏—Ç–µ –æ—à–∏–±–∫—É –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞
// P.S. –≠—Ç–∞ –æ—à–∏–±–∫–∞ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏, —Å—Ç—É–¥–µ–Ω—Ç—ã —á–∞—Å—Ç–æ –æ—à–∏–±–∞—é—Ç—Å—è –ø–æ–¥–æ–±–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏ –Ω–µ –º–æ–≥—É—Ç –ø–æ–Ω—è—Ç—å –≤ —á–µ–º –¥–µ–ª–æ.

// üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:  .then((res: any) => setTodo(res.data.data))