import axios from 'axios'
import React, { useEffect, useState } from 'react'
import ReactDOM from 'react-dom/client';

// Types
type PostType = {
    id: string
    body: string
    title: string
    userId: string
}


// Api
const instance = axios.create({baseURL: 'https://exams-frontend.kimitsu.it-incubator.ru/api/'})

const postsAPI = {
    getPosts() {
        // Promise.resolve() —Å—Ç–æ–∏—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–≥–ª—É—à–∫–∏, —á—Ç–æ–±—ã TS –Ω–µ —Ä—É–≥–∞–ª—Å—è –∏ –∫–æ–¥ –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª—Å—è
        // Promise.resolve() –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤
        return instance.get('/posts')
    },
}


// App
export const App = () => {

    const [posts, setPosts] = useState<PostType[]>([])

    useEffect(() => {
        postsAPI.getPosts()
            .then((res: any) => {
                setPosts(res.data)
            })
    }, [])


    return (
        <>
            <h1>üìú –°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤</h1>
            {
                posts.length
                    ? posts.map(p => {
                        return <div key={p.id}><b>title</b>: {p.title}</div>
                    })
                    : <h2>–ü–æ—Å—Ç–æ–≤ –Ω–µ—Ç—É üò•</h2>
            }
        </>
    )
}


const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
root.render(<App/>)

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// –ù–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤
// –¢–∏–ø–∏–∑–∞—Ü–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –º–æ–∂–Ω–æ –∏ —É–∫–∞–∑–∞—Ç—å (–≤ –æ—Ç–≤–µ—Ç–∞—Ö —É—á—Ç–µ–Ω—ã –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞).
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç—Ä–æ–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞.

// üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: return Promise.resolve()
